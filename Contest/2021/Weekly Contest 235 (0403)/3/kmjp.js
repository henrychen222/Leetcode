// 04/04/21 night

// WA 40/43
class TreeSet {

    constructor(compatator) {
        this.length = 0;
        this.elements = [];
        compatator ? this.compatator = compatator : this.compatator = (a, b) => { return a - b };
    }

    size() {
        return this.elements.length;
    }

    last() {
        return this.elements[this.length - 1];
    }

    first() {
        return this.elements[0];
    }

    isEmpty() {
        return this.size() === 0;
    }

    pollLast() {
        if (this.length > 0) {
            this.length--;
            return this.elements.splice(this.length, 1);
        }
        return null;
    }

    pollFirst() {
        if (this.length > 0) {
            this.length--;
            return this.elements.splice(0, 1);
        }
        return null;
    }

    add(element) {
        let index = this.binarySearch(element);
        if (index < 0) {
            index = -index - 1;
        }
        this.elements.splice(index, 0, element);
        this.length++;
    }

    binarySearch(value) {
        let low = 0;
        let high = this.elements.length - 1;
        while (low <= high) {
            var mid = (low + high) >>> 1;
            var midValue = this.elements[mid];
            var cmp = this.compatator(midValue, value);
            if (cmp < 0) {
                low = mid + 1;
            } else if (cmp > 0) {
                high = mid - 1;
            } else {
                return mid;
            }
        }
        return -(low + 1);
    }

    ///////////////////////////// new add //////////////////////////////
    has(v) {
        return this.binarySearch(v) < 0 ? false : true;
    }

    // issue
    lower(v) {
        let idx = this.binarySearch(v);
        if (idx >= 0) {
            idx--;
            return idx < 0 ? null : this.elements[idx];
        } else {
            let postiveIdx = Math.abs(idx);
            postiveIdx -= 2;
            return postiveIdx < 0 ? null : this.elements[postiveIdx];
        }
    }

    higher(v) {
        let n = this.size();
        let idx = this.binarySearch(v);
        if (idx >= 0) {
            idx++;
            return idx >= n ? null : this.elements[idx];
        } else {
            let postiveIdx = Math.abs(idx);
            postiveIdx--;
            return postiveIdx >= n ? null : this.elements[postiveIdx];
        }
    }

    lower_bound(t) {
        return this.has(t) ? t : this.higher(t);
    }
}

const pr = console.log;

const BMOD = BigInt(1e9 + 7);
const MOD = 1e9 + 7;
const MAX = Number.MAX_SAFE_INTEGER;
const MIN = Number.MIN_SAFE_INTEGER;
const mi = Math.min;
const abs = Math.abs;
const minAbsoluteSumDiff = (a, b) => {
    let se = new TreeSet();
    se.add(MIN);
    se.add(MAX);
    let res = sum = 0;
    let n = a.length;
    for (let i = 0; i < n; i++) {
        se.add(a[i]);
        sum += abs(a[i] - b[i]);
    }
    res = sum;
    // pr(res);
    for (let i = 0; i < n; i++) {
        let it = se.lower_bound(b[i]);
        // pr("it", it);
        res = mi(res, sum - abs(a[i] - b[i]) + abs(it - b[i]));
        it = se.lower(it);
        // pr("it", it);
        res = mi(res, sum - abs(a[i] - b[i]) + abs(it - b[i]));
        pr(res, sum - abs(a[i] - b[i]) + abs(it - b[i]), abs(a[i] - b[i]), abs(it - b[i]), it); // it issue, first 670554 (670551 670551 1982 1 1984)
    }
    // pr(res);
    return res % MOD;
};

const main = () => {
    let nums1 = [1, 7, 5], nums2 = [2, 3, 5];
    let nums1_2 = [2, 4, 6, 8, 10], nums2_2 = [2, 4, 6, 8, 10];
    let nums1_3 = [1, 10, 4, 4, 2, 7], nums2_3 = [9, 3, 5, 1, 7, 4];
    let nums1_debug1 = [778, 1934, 1149, 1923, 1146, 1787, 1572, 946, 1662, 1350, 593, 46, 667, 505, 1418, 181, 1626, 241, 1099, 1525, 1238, 224, 1601, 1490, 1793, 779, 64, 1284, 240, 189, 526, 1334, 730, 1170, 215, 1897, 1118, 989, 551, 367, 1690, 1971, 546, 1761, 1092, 733, 160, 1305, 1557, 730, 1113, 648, 1177, 1066, 1213, 178, 1328, 4, 127, 1117, 1280, 577, 661, 805, 1361, 607, 586, 987, 831, 351, 252, 513, 12, 1479, 303, 1824, 348, 609, 1015, 610, 1191, 1242, 66, 184, 522, 1492, 204, 101, 1765, 1909, 1208, 258, 1631, 1701, 846, 632, 350, 292, 1160, 1881, 1247, 818, 1316, 1735, 1172, 20, 1621, 1787, 1489, 1174, 722, 1311, 1166, 1555, 1813, 1012, 729, 639, 940, 1806, 1073, 1294, 956, 1683, 539, 1562, 1545, 223, 993, 1121, 448, 883, 478, 484, 1838, 1537, 563, 1353, 1573, 514, 1957, 618, 1934, 1473, 205, 1989, 290, 1629, 1798, 1562, 1407, 218, 1299, 111, 170, 1984, 406, 543, 839, 1835, 202, 1910, 1810, 217, 1482, 1063, 1226, 1504, 424, 1623, 384, 1094, 807, 1983, 925, 1078, 1409, 1550, 1817, 1681, 882, 1397, 1973, 1883, 411, 697, 498, 906, 176, 1108, 1959, 107, 1274, 1556, 1295, 1420, 1605, 650, 1272, 1907, 915, 1821, 1429, 389, 248, 1461, 349, 1424, 268, 560, 331, 1666, 284, 896, 620, 1728, 1225, 234, 1508, 1040, 1783, 1641, 217, 831, 1887, 874, 1493, 1947, 574, 190, 921, 330, 1812, 90, 165, 1953, 566, 1626, 1249, 1726, 653, 26, 919, 1695, 1156, 1499, 486, 297, 1709, 1061, 80, 594, 173, 143, 77, 1879, 1339, 760, 1686, 102, 965, 545, 731, 1045, 972, 961, 1966, 954, 1203, 1136, 1974, 1584, 1284, 1804, 749, 1033, 1498, 727, 786, 1286, 680, 359, 1015, 160, 513, 997, 387, 275, 1310, 30, 2, 1342, 507, 661, 880, 868, 938, 1039, 1522, 1406, 750, 566, 1102, 1447, 1265, 598, 909, 558, 1999, 1715, 656, 472, 105, 465, 728, 1483, 1283, 667, 844, 1428, 1558, 349, 183, 1970, 543, 1401, 1928, 840, 334, 854, 208, 1247, 343, 1340, 983, 146, 853, 1801, 104, 768, 1426, 751, 848, 1550, 800, 1332, 1251, 1154, 115, 305, 295, 1593, 1301, 228, 1127, 674, 33, 1710, 1281, 1776, 936, 1781, 249, 492, 1343, 1266, 660, 129, 383, 1348, 1117, 542, 1699, 972, 195, 296, 1966, 527, 1001, 1381, 258, 376, 436, 178, 1066, 867, 1345, 1294, 321, 1682, 1501, 1949, 1369, 348, 1483, 1541, 1653, 1769, 786, 228, 1343, 631, 188, 1913, 1587, 1433, 216, 406, 1185, 3, 1544, 1525, 575, 30, 116, 672, 1765, 1546, 965, 983, 1136, 1031, 1531, 941, 175, 1931, 904, 715, 1097, 192, 1635, 428, 1605, 1123, 101, 1455, 240, 502, 511, 1657, 1659, 1326, 994, 560, 314, 502, 1030, 1249, 695, 1930, 1732, 347, 1820, 1852, 1163, 258, 1212, 291, 351, 877, 1115, 423, 1093, 24, 1890, 679, 329, 1970, 428, 1235, 1832, 512, 203, 1682, 1687, 1080, 1876, 1405, 794, 167, 302, 66, 541, 540, 1335, 1090, 574, 1019, 1024, 1571, 816, 347, 764, 1807, 203, 232, 69, 3, 1655, 1569, 1606, 769, 548, 747, 1554, 174, 501, 1293, 1740, 740, 336, 66, 1116, 1618, 1136, 1402, 1025, 1607, 323, 1960, 1465, 763, 1372, 1525, 251, 998, 82, 1884, 862, 487, 319, 749, 1007, 1390, 642, 522, 991, 754, 238, 557, 770, 124, 504, 1968, 49, 634, 1181, 1619, 616, 1117, 1354, 666, 1849, 780, 1010, 1196, 1096, 574, 540, 197, 141, 835, 1105, 388, 549, 236, 482, 1918, 17, 1455, 1313, 1850, 1750, 1556, 1763, 515, 395, 779, 1653, 265, 686, 179, 1459, 1408, 31, 612, 338, 1759, 275, 1959, 1927, 2, 627, 904, 1486, 1752, 1770, 1595, 821, 1862, 683, 1764, 1758, 1763, 776, 653, 192, 1498, 604, 100, 678, 1259, 1730, 810, 47, 538, 1788, 405, 1580, 766, 77, 1727, 822, 979, 191, 1701, 245, 1720, 1822, 1369, 1257, 1362, 186, 481, 1989, 1272, 1097, 181, 255, 21, 1203, 261, 306, 1673, 1556, 800, 1213, 792, 1742, 1918, 577, 617, 709, 536, 1574, 1496, 1553, 1546, 1622, 21, 1471, 1080, 544, 883, 112, 326, 807, 969, 344, 990, 33, 644, 1872, 542, 1129, 964, 1893, 631, 1597, 1290, 439, 528, 320, 97, 1227, 193, 1993, 2, 585, 680, 402, 301, 1407, 631, 1050, 967, 1660, 100, 1859, 1831, 533, 311, 1989, 472, 1140, 1376, 1657, 1434, 852, 399, 527, 1, 502, 1529, 1881, 1604, 303, 426, 1197, 560, 8, 1726, 1287, 1826, 1629, 1542, 1525, 544, 1182, 521, 1945, 449, 529, 1297, 203, 1296, 685, 42, 788, 1773, 1393, 1814, 180, 812, 939, 763, 1020, 1460, 994, 739, 229, 386, 1693, 1388, 599, 707, 825, 1718, 803, 1389, 342, 391, 1482, 1799, 810, 1178, 1907, 524, 574, 1740, 1033, 1821, 860, 974, 346, 1692, 1911, 1525, 1578, 529, 275, 93, 1742, 312, 1128, 290, 1041, 1441, 227, 213, 403, 1199, 1493, 1198, 1732, 1242, 1010, 340, 413, 1645, 948, 214, 1752, 728, 214, 821, 1971, 1759, 1657, 424, 1778, 361, 434, 1527, 474, 787, 649, 1904, 934, 1674, 1292, 630, 693, 1284, 1066, 972, 649, 216, 1913, 1246, 186, 66, 1872, 1433, 226, 336, 797, 1454, 847, 1751, 1105, 755, 1460, 894, 143, 1, 615, 1409, 513, 87, 212, 1904, 19, 790, 889, 1038, 1413, 435, 729, 851, 845, 1048, 1305, 810, 1027, 1140, 582, 100, 1572, 1350, 1916, 787, 1727, 1126, 1616, 1375, 1995, 556, 1672, 629, 1823, 310, 1197, 1010, 328, 1062, 896, 540, 1735, 1154, 1922, 1354, 1824, 979, 1002, 520, 172, 535, 564, 788, 1416, 1839, 972, 1603, 1684, 1297, 87, 973, 1893, 1382, 1530, 1276, 67, 1197, 1824, 1489, 987, 503, 1929, 1183, 846, 1081, 726, 318, 1249, 654, 1358, 217, 523, 898, 300, 1393, 1754, 632, 190, 552, 751, 180, 1863, 1238, 429, 289, 1231, 1800, 1581, 221, 1950, 219, 1917, 248, 356, 1814, 1948, 1785, 1860, 718, 832, 73, 68, 1775, 1841, 662, 1838, 1449, 1467, 1825, 130, 1136, 784, 768, 19, 572, 1043, 701, 661, 1031, 622, 469, 1973, 1698, 1885, 1817, 929, 1824, 625, 1217, 1820, 1913, 206, 852, 1212, 1753, 1805, 337, 1003, 414, 746, 362, 1737, 1710],
        nums2_debug1 = [1760, 1143, 421, 744, 278, 851, 1080, 1730, 483, 680, 1230, 1301, 682, 426, 1617, 398, 816, 816, 179, 1151, 304, 790, 343, 1163, 504, 955, 278, 1982, 586, 1521, 314, 499, 972, 1951, 1622, 1308, 312, 162, 1196, 446, 812, 519, 885, 1794, 1403, 931, 1038, 1781, 491, 1484, 21, 585, 1781, 509, 1760, 1346, 1832, 1718, 982, 937, 1462, 1833, 483, 1836, 1493, 703, 1192, 1548, 656, 1264, 1465, 1438, 451, 318, 1806, 1115, 1554, 1148, 1587, 688, 867, 783, 1800, 270, 1503, 211, 1057, 267, 950, 905, 375, 303, 1096, 1521, 133, 1400, 588, 1253, 1516, 1863, 892, 254, 592, 881, 839, 1949, 552, 446, 1966, 1651, 450, 1005, 1864, 1529, 1324, 1103, 783, 185, 668, 1063, 256, 1042, 1210, 1457, 207, 121, 640, 1271, 832, 1379, 1521, 573, 1295, 379, 431, 567, 1800, 130, 67, 1517, 320, 1866, 426, 1470, 1787, 922, 482, 58, 244, 1102, 336, 183, 232, 276, 621, 317, 203, 479, 997, 378, 721, 167, 359, 847, 1142, 1736, 920, 1904, 1543, 431, 1680, 1512, 1447, 1904, 1931, 739, 555, 1011, 1849, 1730, 430, 18, 494, 1226, 1581, 1132, 131, 1493, 572, 901, 579, 800, 1136, 1396, 1727, 235, 707, 803, 682, 1149, 659, 1571, 1102, 925, 259, 1190, 1301, 1546, 472, 226, 1313, 1396, 1501, 837, 1653, 176, 16, 524, 105, 440, 418, 1770, 842, 1465, 1035, 1687, 1239, 1443, 804, 1214, 1653, 13, 1820, 1422, 893, 174, 356, 298, 953, 1781, 1458, 1385, 682, 1650, 1, 1383, 1477, 634, 703, 1746, 64, 231, 1534, 318, 698, 1221, 1300, 514, 129, 487, 172, 1912, 1690, 1984, 1154, 401, 1997, 1754, 650, 958, 1686, 1715, 1818, 920, 613, 1466, 1323, 793, 1710, 1047, 1660, 176, 377, 320, 1023, 466, 371, 1461, 1658, 1268, 476, 69, 392, 1297, 728, 6, 1334, 1146, 974, 1313, 1206, 209, 1452, 932, 703, 1645, 144, 1743, 1242, 122, 16, 551, 518, 342, 1331, 1317, 1142, 1444, 470, 1800, 222, 189, 1049, 975, 1434, 314, 1391, 1104, 950, 1611, 1537, 1652, 471, 1780, 283, 1240, 1185, 1994, 1933, 1454, 686, 42, 444, 362, 1294, 1154, 527, 1909, 1761, 1174, 1522, 1166, 1487, 669, 1158, 1140, 1648, 1826, 1615, 1453, 1444, 1363, 1013, 1650, 509, 1477, 1364, 224, 1184, 14, 556, 1960, 1432, 841, 353, 1312, 1154, 1910, 1019, 1937, 1138, 1656, 600, 103, 797, 181, 805, 116, 1772, 1081, 489, 1309, 1408, 1891, 346, 571, 1000, 1030, 1030, 1691, 237, 905, 1131, 1006, 871, 1192, 559, 1386, 580, 1985, 1641, 88, 1144, 1272, 998, 1844, 1880, 1348, 837, 1071, 622, 175, 716, 1616, 280, 1530, 97, 63, 9, 1478, 929, 457, 1030, 1484, 236, 1951, 1547, 150, 422, 1415, 1507, 676, 680, 1737, 35, 792, 1790, 931, 384, 1178, 487, 326, 164, 357, 920, 1399, 1422, 1000, 1208, 1391, 751, 1782, 1861, 331, 1102, 1414, 526, 1308, 388, 387, 1991, 919, 416, 893, 1273, 807, 1684, 599, 735, 1063, 502, 295, 601, 280, 288, 954, 269, 65, 1505, 637, 1777, 1737, 1754, 1284, 547, 431, 370, 279, 273, 899, 402, 1424, 161, 1195, 1705, 1630, 170, 1903, 346, 229, 1977, 1549, 1881, 940, 413, 21, 1425, 1214, 1388, 1406, 1889, 1161, 1980, 64, 235, 178, 1018, 1495, 1907, 1743, 1670, 6, 1750, 1931, 212, 994, 1392, 1334, 509, 1715, 1893, 531, 973, 854, 1481, 504, 771, 1950, 1928, 1, 211, 830, 1247, 909, 1143, 321, 1488, 271, 458, 1410, 98, 1391, 988, 1220, 207, 1734, 1041, 684, 645, 998, 1041, 850, 581, 1039, 1865, 1523, 183, 459, 905, 386, 1763, 1027, 596, 1362, 938, 600, 212, 1005, 1963, 1292, 1667, 449, 782, 117, 1651, 286, 701, 1968, 1158, 1945, 1942, 300, 1671, 1996, 283, 139, 879, 1251, 945, 1429, 1665, 1729, 52, 1925, 15, 1945, 1634, 570, 514, 1765, 955, 1047, 1830, 1731, 1112, 275, 699, 562, 1009, 1690, 229, 1146, 1685, 1770, 381, 993, 21, 599, 1391, 887, 1417, 423, 1050, 1067, 1226, 406, 18, 835, 695, 308, 225, 1864, 1681, 498, 1746, 1992, 1390, 761, 1556, 1794, 521, 339, 1534, 269, 1424, 783, 309, 1298, 133, 801, 391, 1821, 559, 64, 372, 800, 406, 1335, 79, 208, 1561, 1380, 209, 951, 1435, 220, 1367, 1888, 1538, 1925, 495, 109, 551, 667, 1967, 148, 1258, 1403, 1742, 750, 1643, 1515, 25, 1671, 1713, 592, 399, 1249, 1558, 1190, 53, 1857, 57, 508, 1875, 1056, 1435, 1638, 1493, 923, 1859, 665, 171, 484, 491, 882, 42, 1535, 1968, 1007, 1049, 37, 421, 1124, 1748, 1364, 913, 632, 1212, 1581, 1036, 837, 645, 421, 1158, 796, 550, 1829, 209, 862, 541, 218, 274, 1332, 1161, 277, 1347, 1272, 1422, 492, 724, 890, 980, 535, 1493, 396, 1704, 1445, 734, 1190, 42, 1348, 39, 755, 941, 460, 1920, 1426, 1946, 1765, 203, 86, 78, 1276, 317, 822, 119, 2, 817, 1742, 619, 1773, 5, 1196, 673, 165, 1194, 1716, 118, 376, 1672, 892, 505, 1719, 920, 1040, 1647, 614, 1320, 1040, 624, 48, 251, 1117, 1288, 1217, 678, 1952, 1319, 1482, 676, 579, 1297, 209, 211, 453, 879, 766, 548, 1082, 1132, 239, 607, 1209, 297, 1013, 1645, 173, 618, 1444, 413, 821, 295, 407, 1264, 1684, 971, 1082, 1660, 1921, 184, 1998, 316, 1991, 1969, 1784, 126, 1574, 270, 562, 196, 1648, 972, 1193, 1732, 1534, 1803, 398, 1336, 1785, 1790, 357, 175, 1105, 1519, 25, 74, 1593, 312, 1221, 415, 1545, 522, 908, 282, 730, 298, 1331, 615, 1086, 63, 626, 857, 182, 246, 86, 694, 105, 254, 194, 424, 1588, 1020, 377, 1662, 1380, 472, 1398, 1129, 1038, 110, 1908, 16, 488, 222, 422, 1964, 237, 796, 1600, 1229, 1901, 161, 412, 1171, 1834, 1480, 1847, 1221, 316, 1730, 801, 30, 446, 1011, 913, 619, 1215, 18, 942, 1726, 1362, 1549, 262, 1614, 1566, 1091, 1435, 676, 1567, 360, 1425, 832, 1779, 1316, 1762, 162, 1070, 516, 1787, 658, 1638, 1463, 1772, 120, 840, 851, 1755, 1332, 865, 1566, 1153, 312, 758, 1429, 1788, 1513, 1980, 1785, 1692, 1042, 1856, 1036, 22, 208, 1633, 664, 131, 167, 577, 1113, 370, 267, 696, 1070, 1810, 280, 865, 780, 1081];
    // pr(minAbsoluteSumDiff(nums1, nums2));
    // pr(minAbsoluteSumDiff(nums1_2, nums2_2));
    // pr(minAbsoluteSumDiff(nums1_3, nums2_3));
    pr(minAbsoluteSumDiff(nums1_debug1, nums2_debug1)); // 670551
};

main()

// let ts = new TreeSet();
// ts.add(1);
// ts.add(7);
// ts.add(5);
// // pr(ts);
// // pr(ts.binarySearch(5), ts.binarySearch(4));
// pr(ts.lower(-5)); // null
// pr(ts.lower(0)); // null
// pr(ts.lower(1)); // null
// pr(ts.lower(2)); // 1
// pr(ts.lower(3)); // 1
// pr(ts.lower(4)); // 1
// pr(ts.lower(5)); // 1
// pr(ts.lower(6)); // 5
// pr(ts.lower(7)); // 5
// pr(ts.lower(9)); // 7
// pr(ts.lower(1000)); // 7

// pr()
// pr(ts.higher(-5)); // 1
// pr(ts.higher(0)); // 1
// pr(ts.higher(1)); // 5
// pr(ts.higher(2)); // 5
// pr(ts.higher(3)); // 5
// pr(ts.higher(4)); // 5
// pr(ts.higher(5)); // 7
// pr(ts.higher(6)); // 7
// pr(ts.higher(7)); // null
// pr(ts.higher(9)); // null
// pr(ts.higher(1000)); // null
